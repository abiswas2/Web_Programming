{"version":3,"sources":["components/HeaderComponent/HeaderComponent.js","components/FooterComponent/FooterComponent.js","services/eventUploadService.js","components/EventsFormComponent/EventsFormComponent.js","services/eventsService.js","components/EventsComponent/EventsComponent.js","components/HomeComponent/HomeComponent.js","services/checkInService.js","components/SearchCheckInComponent/SearchCheckInComponent.js","components/DownloadComponent/DownloadComponent.js","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","className","src","alt","id","to","UploadEventDataService","data","eventName","Promise","resolve","reject","console","log","axios","post","then","res","catch","err","message","e","EventsFormComponet","props","handleOnChange","target","name","value","files","setState","prevState","eventUploadObj","Object","assign","closeModal","state","formError","formErrorMsg","bind","handleEvenFormSubmit","preventDefault","this","FormData","append","studentFile","result","history","push","pathname","studentData","onClick","onSubmit","htmlFor","onChange","form","type","accept","Component","withRouter","EventsService","postEventService","code","getEventService","get","downloadEventService","Events","showFormState","showForm","createEventCards","events","length","map","event","index","key","openEventUploadModal","eventDesc","toUpperCase","description","location","msg","showSpinner","Home","desc","toEvent","loading","error","selectValue","handleChange","handleChangeDesc","handleSubmit","handleSelectChange","dataObj","EventService","eventType","placeholder","CheckInService","pantherId","status","patch","getKeys","keys","getHeader","renderRows","rowData","checked","toggleStatus","getEventRowData","items","filteredData","row","searchValue","filters","toggleFilterSelection","initiateSearch","navigateCheckIn","indexOf","newFilterArray","clickedResult","filter","student","checked_in","findIndex","panther_id","filterCopy","updateCheckInStatus","studentObj","studentCopy","searchVal","filteredResults","toLowerCase","filterName","checkFilterSelection","Download","downloadExcel","downloadExcelCheckedIn","downloadExcelNotCheckedIn","window","href","App","routeToEvents","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4bAwBeA,MApBf,WACI,OACI,gCACI,yBAAKC,UAAU,QACX,yBAAKC,IAAI,wBAAwBC,IAAI,UAEzC,yBAAKF,UAAU,cACX,4BACI,wBAAIG,GAAG,QACH,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,wBAAID,GAAG,UACH,kBAAC,IAAD,CAAMC,GAAG,WAAT,e,MCLTL,MARf,WACI,OACI,gCACI,uE,sCCgBGM,MApBf,SAAgCC,EAAMC,GAC9B,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACjCC,QAAQC,IAAIN,GACZ,IACIO,IAAMC,KAAN,uCAA2CP,EAA3C,WAA+DD,EAAM,IAAIS,MAAK,SAAAC,GACvEA,EACCP,EAAQO,GAERN,EAAO,4BAGdO,OAAO,SAACC,GACLR,EAAOQ,EAAIC,YAEjB,MAAMC,GACJT,QAAQC,IAAIQ,QCZtBC,G,wDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,eAAiB,SAACH,GAAO,IAAD,EACCA,EAAEI,OAAjBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACTN,EAAEI,OAAOG,QACRD,EAAQN,EAAEI,OAAOG,MAAM,IAE3BhB,QAAQC,IAAR,iBAAuBa,EAAvB,qBAAwCC,IACxC,EAAKE,UAAS,SAAAC,GACV,IAAIC,EAAiBC,OAAOC,OAAO,GAAIH,EAAUC,gBAEjD,OADAA,EAAeL,GAAQC,EAChB,CAAEI,sBAjBC,EAwClBG,WAAa,WACT,EAAKX,MAAMW,YAAW,IAvCtB,EAAKC,MAAU,CAACJ,eAAgB,GAAIK,WAAW,EAAOC,aAAc,IACpE,EAAKb,eAAiB,EAAKA,eAAec,KAApB,gBACtB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKJ,WAAa,EAAKA,WAAWI,KAAhB,gBALJ,E,iEAqBGjB,GAAG,IAAD,OACnBA,EAAEmB,iBACF5B,QAAQC,IAAI4B,KAAKN,MAAMJ,gBACvB,IAAMxB,EAAO,IAAImC,SACjBnC,EAAKoC,OAAO,OAAQF,KAAKN,MAAMJ,eAAea,aAC9CtC,EAAuBC,EAAMkC,KAAKlB,MAAMf,WAAWQ,MAAK,SAAC6B,GACrD,EAAKtB,MAAMuB,QAAQC,KAAK,CACpBC,SAAU,kBACVb,MAAO,CAAEc,YAAaJ,EAAOtC,KAAKA,KAAMC,UAAW,EAAKe,MAAMf,gBAEnE,SAACW,GACAP,QAAQC,IAAI,sCACZ,EAAKgB,SAAS,CACVO,WAAW,EACXC,aAAclB,S,+BAUtB,OACI,yBAAKlB,UAAW,yBACZ,4BAAQA,UAAU,cAAciD,QAAST,KAAKP,YAA9C,KACEO,KAAKN,MAAMC,UAAY,wBAAInC,UAAU,aAAd,WAAoCwC,KAAKN,MAAME,aAA/C,KAAqE,GAC9F,0BAAMX,KAAK,mBAAmBtB,GAAG,kBAAkB+C,SAAUV,KAAKF,sBAC9D,uCAAcE,KAAKlB,MAAMf,UAAzB,KACA,yBAAKP,UAAU,aACX,2BAAOmD,QAAQ,aAAf,QAGA,2BAAO1B,KAAK,YAAYtB,GAAG,YAAYiD,SAAUZ,KAAKjB,iBACtD,2BAAO4B,QAAQ,YAAf,YAGA,2BAAO1B,KAAK,YAAYtB,GAAG,WAAWiD,SAAUZ,KAAKjB,kBAEzD,yBAAKvB,UAAU,aACX,2BAAOmD,QAAQ,aAAahD,GAAG,cAA/B,2BACA,8BAAUsB,KAAK,UAAU4B,KAAK,UAAUlD,GAAG,aAAaiD,SAAUZ,KAAKjB,kBAE3E,yBAAKvB,UAAU,aACX,2BAAOmD,QAAQ,aAAf,cAGA,2BAAOG,KAAK,OAAO7B,KAAK,YAAYtB,GAAG,YAAYiD,SAAUZ,KAAKjB,iBAElE,2BAAO4B,QAAQ,iBAAf,kBAGA,2BAAO1B,KAAK,gBAAgBtB,GAAG,gBAAgBiD,SAAUZ,KAAKjB,kBAElE,yBAAKvB,UAAU,aACX,2BAAOmD,QAAQ,aAAf,kDACA,2BAAOG,KAAK,OAAOnD,GAAG,YAAYsB,KAAK,cAAc2B,SAAUZ,KAAKjB,eAAgBgC,OAAO,uEAE/F,2BAAOD,KAAK,SAAStD,UAAU,eAAe0B,MAAM,4B,GAlFvC8B,cAyFlBC,cAAWpC,GCnCXqC,EAxDQ,CAEnBC,iBAFmB,SAEFrD,GACb,OAAO,IAAIE,SAAQ,SAASC,EAASC,GACjCC,QAAQC,IAAIN,GACZ,IACIO,IAAMC,KAAK,+BAAgCR,GAAMS,MAAK,SAAAC,GAC7B,MAAlBA,EAAIV,KAAKsD,KACRnD,EAAQO,GAERN,EAAO,wBAGdO,OAAO,SAACC,OAEX,MAAME,GACJT,QAAQC,IAAIQ,QAIxByC,gBApBmB,WAqBf,OAAO,IAAIrD,SAAQ,SAASC,EAASC,GACjC,IACIG,IAAMiD,IAAI,gCAAgC/C,MAAK,SAAAC,GACxCA,EACCP,EAAQO,GAERN,EAAO,wBAGdO,OAAO,SAACC,OAEX,MAAME,GACJT,QAAQC,IAAIQ,QAIxB2C,qBArCmB,SAqCExD,GACjB,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACjC,IACIG,IAAMiD,IAAN,uCAA0CvD,EAA1C,cAAgEQ,MAAK,SAAAC,GAC9DA,EACCP,EAAQO,GAERN,EAAO,wBAGdO,OAAO,SAACC,OAEX,MAAME,GACJT,QAAQC,IAAIQ,SC9CtB4C,E,kDAEJ,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAsBRW,WAAa,SAACgC,GACZ,EAAKrC,SAAS,CAACsC,SAAUD,KAxBR,EA2BnBE,iBAAmB,WACjB,GAAG,EAAKjC,MAAMkC,OAAOC,OAAS,EAE5B,OADmB,EAAKnC,MAAMkC,OACVE,KAAI,SAACC,EAAOC,GAC9B,OAAGD,EAAMhE,YAAc,EAAK2B,MAAM3B,UACzB,yBAAKP,UAAU,oBAAoByE,IAAKD,GACvC,4BAAQxE,UAAU,YAAYiD,QAAW,EAAKyB,sBAC5C,wBAAI1E,UAAU,cAAd,eAAyC,EAAKkC,MAAM3B,UAApD,KACA,uBAAGP,UAAU,kBAAb,IAAiC,EAAKkC,MAAMyC,UAA5C,OAIH,yBAAK3E,UAAU,aAAayE,IAAKD,GAC9B,4BAAQxE,UAAU,aAChB,wBAAIA,UAAU,cAAd,IAA8BuE,EAAMhE,UAAUqE,cAA9C,KACA,uBAAG5E,UAAU,cAAb,IAA4BuE,EAAMM,YAAlC,KACA,uBAAG7E,UAAU,cAAb,oBAzCf,EAAKsB,MAAMwD,SAAS5C,MACrB,EAAKA,MAAQ,CAAE3B,UAAW,EAAKe,MAAMwD,SAAS5C,MAAM3B,UAAWoE,UAAW,EAAKrD,MAAMwD,SAAS5C,MAAMyC,UAAWT,UAAU,EAAOE,OAAQ,IAExI,EAAKlC,MAAQ,CAAE3B,UAAW,GAAIoE,UAAW,GAAIT,UAAU,EAAOE,OAAQ,IAExE,EAAKM,qBAAuB,EAAKA,qBAAqBrC,KAA1B,gBAPX,E,gEAUE,IAAD,OAClBqB,EAAcG,kBAAkB9C,MAAK,SAACC,GACpCL,QAAQC,IAAII,EAAIV,KAAK8D,QACrB,EAAKxC,SAAS,CACZwC,OAAQpD,EAAIV,KAAK8D,c,6CAMrB5B,KAAKZ,SAAS,CAACsC,UAAW,M,kCA+BhBa,GACV,OAAgC,IAA7BvC,KAAKN,MAAMkC,OAAOC,OACZ,yBAAKrE,UAAU,WAAf,IAA0B,gCAAM+E,EAAN,KAA1B,IAA2C,yBAAK/E,UAAU,cAAa,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,gCAEpJ,K,+BAKT,OAAO,6BACGwC,KAAKN,MAAMgC,SAAW,kBAAC,EAAD,CAAa3D,UAAWiC,KAAKN,MAAM3B,UAAW0B,WAAYO,KAAKP,aAAgB,GACtGO,KAAK2B,mBACN,yBAAKnE,UAAU,WACZwC,KAAKwC,YAAY,8B,GAlEXxB,aAwENC,cAAWO,GC1EpBiB,G,wDAEJ,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CAACR,MAAO,GAAIwD,KAAM,GAAIC,SAAS,EAAOC,SAAS,EAAOC,MAAO,GAAIC,YAAa,aAC3F,EAAKC,aAAe,EAAKA,aAAalD,KAAlB,gBACpB,EAAKmD,iBAAmB,EAAKA,iBAAiBnD,KAAtB,gBACxB,EAAKoD,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqD,mBAAqB,EAAKA,mBAAmBrD,KAAxB,gBANT,E,yDASNkC,GACX/B,KAAKZ,SAAS,CAACF,MAAO6C,EAAM/C,OAAOE,U,yCAGlB6C,GACjB/B,KAAKZ,SAAS,CAAC0D,YAAaf,EAAM/C,OAAOE,U,uCAG1B6C,GACf/B,KAAKZ,SAAS,CAACsD,KAAMX,EAAM/C,OAAOE,U,mCAGvB6C,GAAQ,IAAD,OAGlB,GAFAA,EAAMhC,iBAEkB,KAArBC,KAAKN,MAAMR,MAAa,CACzB,IAAIiE,EAAU,CACZ,UAAanD,KAAKN,MAAMR,MACxB,YAAec,KAAKN,MAAMgD,MAE5B1C,KAAKZ,SAAS,CACZyD,MAAO,GACPD,SAAS,IAEXQ,EAAajC,iBAAiB,CAACgC,IAAU5E,MAAM,SAAC6B,GAC9C,EAAKhB,SAAS,CACZwD,SAAS,IAEX,EAAK9D,MAAMuB,QAAQC,KAAK,CACtBC,SAAU,UACVb,MAAO,CAAE3B,UAAW,EAAK2B,MAAMR,MAAOiD,UAAW,EAAKzC,MAAMgD,KAAMW,UAAW,EAAK3D,MAAMoD,uBAI5F9C,KAAKZ,SAAS,CACZyD,MAAO,0C,kCAKDN,GACV,OAAO,yBAAK/E,UAAU,WAAf,IAA0B,gCAAM+E,EAAN,KAA1B,IAA2C,yBAAK/E,UAAU,cAAa,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,kC,+BAI3J,OACE,6BACKwC,KAAKN,MAAMkD,QAAU5C,KAAKwC,YAAY,qBAAsB,GAC7D,yBAAKhF,UAAS,oBAAgBwC,KAAKN,MAAMkD,QAAU,eAAiB,KAChE5C,KAAKN,MAAMmD,MAAS,uBAAGrF,UAAU,SAC9BwC,KAAKN,MAAMmD,OACT,GACP,4CAGA,0BAAMnC,SAAUV,KAAKiD,cACnB,yBAAKzF,UAAU,aACX,oDAGA,2BAAOsD,KAAK,OAAOtD,UAAiC,KAArBwC,KAAKN,MAAMmD,MAAgB,cAAc,GAAI3D,MAAOc,KAAKN,MAAMR,MAAOoE,YAAY,aAAa1C,SAAUZ,KAAK+C,gBAEjJ,yBAAKvF,UAAU,aACb,oDAGA,2BAAOsD,KAAK,OAAO5B,MAAOc,KAAKN,MAAMgD,KAAMY,YAAY,oBAAoB1C,SAAUZ,KAAKgD,oBAY5F,2BAAOlC,KAAK,SAAS5B,MAAM,SAAS1B,UAAU,wB,GAzFzCwD,cAiGJC,cAAWwB,G,cCjFXc,MAnBf,SAAwBC,EAAWzF,EAAW0F,GACtC,OAAO,IAAIzF,SAAQ,SAASC,EAASC,GACjC,IACIG,IAAMqF,MAAN,uCAA4C3F,EAA5C,YAAyDyF,EAAzD,qBAA+EC,IAAUlF,MAAK,SAAAC,GACvFA,EACCP,EAAQO,GAERN,EAAO,4BAGdO,OAAO,SAACC,GACLR,EAAOQ,EAAIC,YAEjB,MAAMC,GACJT,QAAQC,IAAIQ,QCVtBC,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAWV6E,QAAU,WACN,OAAOpE,OAAOqE,KAAK5D,KAAKN,MAAMc,YAAY,KAb5B,EAuBlBqD,UAAY,WAER,OADW7D,KAAK2D,UACJ7B,KAAI,SAACG,EAAKD,GAClB,OAAO,wBAAIC,IAAKA,GAAMA,EAAIG,mBA1BhB,EA8BlB0B,WAAa,SAACC,EAAQH,GAClB,OAAOA,EAAK9B,KAAI,SAACG,EAAKD,GAClB,MAAW,eAARC,EACQ,wBAAIA,IAAK8B,EAAQ9B,GAAMzE,UAAU,eAAjC,IAAgD,2BAAOA,UAAU,iBAAjB,IAAkC,2BAAOwG,QAASD,EAAO,WAAgBjD,KAAK,WAAWF,SAAU,SAACmB,GAAD,OAAW,EAAKkC,aAAalC,EAAOgC,EAAO,eAA9I,IAAiK,0BAAMvG,UAAU,iBAAjL,KAAhD,KAEA,wBAAIyE,IAAK8B,EAAQ9B,IAAO8B,EAAQ9B,QAnCjC,EAwClBiC,gBAAkB,WAAW,IAAD,OACpBC,EAA4C,IAAnCnE,KAAKN,MAAM0E,aAAavC,OAAe7B,KAAKN,MAAMc,YAAaR,KAAKN,MAAM0E,aACnFR,EAAO5D,KAAK2D,UAChB,OAAOQ,EAAMrC,KAAI,SAACuC,EAAKrC,GACnB,OAAO,wBAAIC,IAAKD,GAAQ,EAAK8B,WAAWO,EAAIT,QA1C7C,EAAK9E,MAAMwD,SAAS5C,MACnB,EAAKA,MAAQ,CAAEc,YAAa,EAAK1B,MAAMwD,SAAS5C,MAAMc,YAAa4D,aAAc,GAAIE,YAAa,GAAIC,QAAS,IAE/G,EAAK7E,MAAQ,CAACc,YAAa,IAE/B,EAAKgE,sBAAwB,EAAKA,sBAAsB3E,KAA3B,gBAC7B,EAAK4E,eAAiB,EAAKA,eAAe5E,KAApB,gBACtB,EAAK6E,gBAAkB,EAAKA,gBAAgB7E,KAArB,gBATT,E,8DAiBdG,KAAKlB,MAAMuB,QAAQC,KAAK,CACpBC,SAAU,YACVb,MAAO,CAAE3B,UAAWiC,KAAKlB,MAAMwD,SAAS5C,MAAM3B,e,4CA6BhCgE,GAAO,IAAD,OACxB,IAAuD,IAApD/B,KAAKN,MAAM6E,QAAQI,QAAQ5C,EAAM/C,OAAOE,OAAc,CACrD,IAAI0F,EAAiB,GACrBA,EAAetE,KAAKyB,EAAM/C,OAAOE,OACjCc,KAAKZ,SAAS,CACVmF,QAASK,IACV,WACC,EAAKH,wBAEP,CAEFzE,KAAKZ,SAAS,CACVmF,QAFmB,Q,mCAOlBxC,EAAOyB,GAChB,IAAIqB,EACJ,GAAsC,IAAnC7E,KAAKN,MAAM0E,aAAavC,OAAa,EACpCgD,EAAgB7E,KAAKN,MAAM0E,aAAaU,QAAO,SAACC,GAAD,OAAaA,EAAO,aAAmBvB,MACxE,GAAGwB,WAAajD,EAAM/C,OAAOgF,QAC3C,IAAIhC,EAAQhC,KAAKN,MAAM0E,aAAaa,WAAW,SAAAF,GAAO,OAAIA,EAAQG,aAAe1B,KAC7E2B,EAAU,YAAOnF,KAAKN,MAAM0E,cAChCe,EAAWnD,GAAS6C,EAAc,GAClC7E,KAAKZ,SAAS,CACVgF,aAAce,IAElBnF,KAAKoF,oBAAoBP,EAAc,SAEvCA,EAAgB7E,KAAKN,MAAMc,YAAYsE,QAAO,SAACC,GAAD,OAAaA,EAAO,aAAmBvB,MACvE,GAAGwB,WAAajD,EAAM/C,OAAOgF,QAC3ChE,KAAKoF,oBAAoBP,EAAc,M,0CAI3BQ,GAChB,IAAIrD,EAAQhC,KAAKN,MAAMc,YAAYyE,WAAU,SAAAF,GAAO,OAAIA,EAAQG,aAAeG,EAAWH,cACtFI,EAAW,YAAOtF,KAAKN,MAAMc,aACjC8E,EAAYtD,GAASqD,EACrBrF,KAAKZ,SAAS,CACVoB,YAAa8E,IAEjB/B,EAAgB8B,EAAWH,WAAWlF,KAAKlB,MAAMwD,SAAS5C,MAAM3B,UAAUsH,EAAWL,c,qCAG1EjD,GAAO,IACdwD,EADa,OAQjB,GANGxD,GACCwD,EAAYxD,EAAM/C,OAAOE,MACzBc,KAAKZ,SAAS,CAAC,YAAe2C,EAAM/C,OAAOE,SAE3CqG,EAAYvF,KAAKN,MAAM4E,YAExBiB,EAAU1D,QAAU,GAAK7B,KAAKN,MAAM6E,QAAQ1C,OAAS,EAAE,CACtD,IAAI2D,EACJA,EAAkBxF,KAAKN,MAAMc,YAAYsE,QAAO,SAACC,GAAD,OAAgG,IAAnFA,EAAQ,EAAKrF,MAAM6E,QAAQ,IAAIkB,cAAcd,QAAQY,EAAUE,kBAC5HtH,QAAQC,IAAIoH,GACZxF,KAAKZ,SAAS,CACVgF,aAAcoB,SAGoB,IAAnCxF,KAAKN,MAAM0E,aAAavC,QACvB7B,KAAKZ,SAAS,CACVgF,aAAc,O,2CAMTsB,GACjB,OAAmD,IAA5C1F,KAAKN,MAAM6E,QAAQI,QAAQe,K,+BAIlC,OACI,yBAAKlI,UAAY,wBACuB,IAAlCwC,KAAKN,MAAMc,YAAYqB,OAAe,sDAAkC,iCAAM,qDAC5E,yBAAKrE,UAAU,oBACX,6EAGA,2BAAO8F,YAAY,oBACf9F,UAAU,eACVoD,SAAUZ,KAAKyE,iBAEnB,4BAAQvF,MAAM,aAAa1B,UAAYwC,KAAK2F,qBAAqB,cAAgB,GAAI,kBACjFlF,QAAST,KAAKwE,uBADlB,cAIA,4BAAQtF,MAAM,YAAY1B,UAAYwC,KAAK2F,qBAAqB,aAAe,GAAI,kBAC/ElF,QAAST,KAAKwE,uBADlB,aAIA,4BAAQtF,MAAM,aAAa1B,UAAYwC,KAAK2F,qBAAqB,cAAgB,GAAI,kBACjFlF,QAAST,KAAKwE,uBADlB,eAKJ,+BACI,+BACA,4BACKxE,KAAK6D,cAGd,+BACK7D,KAAKkE,oBAGV,4BAAQ1G,UAAU,WAAWiD,QAAST,KAAK0E,iBAA3C,8B,GA/Ja1D,aAuKlBC,cAAWpC,GCzKpB+G,E,kDAEJ,WAAY9G,GAAO,IAAD,8BAChB,cAAMA,IACD+G,cAAgB,EAAKA,cAAchG,KAAnB,gBACrB,EAAKiG,uBAAyB,EAAKA,uBAAuBjG,KAA5B,gBAC9B,EAAKkG,0BAA4B,EAAKA,0BAA0BlG,KAA/B,gBAJjB,E,4DAQhBmG,OAAO1D,SAAS2D,KAAhB,uCAAuDjG,KAAKlB,MAAMwD,SAAS5C,MAAM3B,UAAjF,e,+CAIAiI,OAAO1D,SAAS2D,KAAhB,uCAAuDjG,KAAKlB,MAAMwD,SAAS5C,MAAM3B,UAAjF,8B,kDAIAiI,OAAO1D,SAAS2D,KAAhB,uCAAuDjG,KAAKlB,MAAMwD,SAAS5C,MAAM3B,UAAjF,+B,+BAIA,OACI,yBAAKP,UAAU,aACb,qEAGA,4BAAQA,UAAU,WAAWiD,QAAST,KAAK6F,eAA3C,4BAGA,4BAAQrI,UAAU,WAAWiD,QAAST,KAAK8F,wBAA3C,mCAGA,4BAAQtI,UAAU,WAAWiD,QAAST,KAAK+F,2BAA3C,4C,GAjCa/E,aAyCRC,cAAW2E,GCMXM,G,wDAvCb,WAAYpH,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CAACyG,eAAe,EAAOpI,UAAW,GAAIoE,UAAW,IAF7C,E,0DAMLpE,EAAWoE,GACpBpE,IACDI,QAAQC,IAAIL,GACZiC,KAAKZ,SAAS,CACZ+G,eAAe,EACfpI,UAAWA,EACXoE,UAAWA,O,+BAMf,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,WACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GAnCQrF,cCEEsF,QACW,cAA7BN,OAAO1D,SAASiE,UAEe,UAA7BP,OAAO1D,SAASiE,UAEhBP,OAAO1D,SAASiE,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzI,MAAK,SAAA0I,GACJA,EAAaC,gBAEdzI,OAAM,SAAAoE,GACL1E,QAAQ0E,MAAMA,EAAMlE,c","file":"static/js/main.a069a127.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./HeaderComponent.css\";\n\nfunction HeaderComponent(){\n    return (\n        <header>\n            <div className=\"logo\">\n                <img src=\"./images/gsu-logo.png\" alt=\"logo\"></img>\n            </div>\n            <nav className=\"header-mav\">\n                <ul>\n                    <li id=\"home\">\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li id=\"events\">\n                        <Link to=\"/events\">Events</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default HeaderComponent;","import React from \"react\";\nimport \"./FooterComponent.css\";\n\nfunction HeaderComponent(){\n    return (\n        <footer>\n            <span> ©2020 Georgia State University </span>\n        </footer>\n    )\n}\n\nexport default HeaderComponent;","import axios from \"axios\";\n\nfunction UploadEventDataService(data, eventName){\n        return new Promise(function(resolve, reject) {\n            console.log(data);\n            try{\n                axios.post(`http://localhost:8000/events/${eventName}/upload`, data, {}).then(res => {\n                    if(res){\n                        resolve(res);\n                    } else{\n                        reject(\"Upload service failed\");\n                    }\n                })\n                .catch( (err) => {\n                    reject(err.message);\n                });\n            } catch(e){\n                console.log(e);\n            }\n    });\n}\n\nexport default UploadEventDataService;","import React, {Component} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport UploadEventDataService from \"../../services/eventUploadService\";\nimport \"./EventsFormComponent.css\";\n\nclass EventsFormComponet extends Component{\n\n    constructor(props){\n        super(props);\n        this.state =   {eventUploadObj: {}, formError: false, formErrorMsg: \"\"};\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleEvenFormSubmit = this.handleEvenFormSubmit.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    handleOnChange = (e) => {\n        let { name, value} = e.target;\n        if(e.target.files){\n            value = e.target.files[0];\n        }\n        console.log( `name:: ${name} value::: ${value}`);\n        this.setState(prevState => {\n            let eventUploadObj = Object.assign({}, prevState.eventUploadObj);  \n            eventUploadObj[name] = value;\n            return { eventUploadObj };                             \n        });\n    }\n\n    handleEvenFormSubmit(e){\n        e.preventDefault();\n        console.log(this.state.eventUploadObj);\n        const data = new FormData();\n        data.append('file', this.state.eventUploadObj.studentFile);\n        UploadEventDataService(data, this.props.eventName).then((result) => {\n            this.props.history.push({\n                pathname: '/event-check-in',\n                state: { studentData: result.data.data, eventName: this.props.eventName}\n            });\n        }, (err) => {\n            console.log(\"Error while calling upload service\");\n            this.setState({\n                formError: true, \n                formErrorMsg: err\n            });\n        });\n    }\n\n    closeModal = () => {\n        this.props.closeModal(false);\n    }\n\n    render(){\n        return (\n            <div className= \"eventsFormModal modal\">\n                <button className=\"modal-close\" onClick={this.closeModal}> </button>\n                { this.state.formError ? <h2 className=\"error-msg\"> Error: { this.state.formErrorMsg } </h2>: \"\" }\n                <form name=\"eventsUploadForm\" id=\"eventUploadForm\" onSubmit={this.handleEvenFormSubmit}>\n                    <h2> Event: { this.props.eventName} </h2>\n                    <div className=\"inputCont\">\n                        <label htmlFor=\"eventYear\"> \n                            Year\n                        </label>\n                        <input name=\"eventYear\" id=\"eventYear\" onChange={this.handleOnChange}></input>\n                        <label htmlFor=\"semester\"> \n                            Semester\n                        </label>\n                        <input name=\"eventType\" id=\"semester\" onChange={this.handleOnChange}></input>\n                    </div>\n                    <div className=\"inputCont\">\n                        <label htmlFor=\"aboutEvent\" id=\"aboutLabel\"> About Event(optional) </label>\n                        <textarea name=\"comment\" form=\"usrform\" id=\"aboutEvent\" onChange={this.handleOnChange}></textarea>\n                    </div>\n                    <div className=\"inputCont\">\n                        <label htmlFor=\"eventDate\"> \n                            Event Date\n                        </label>\n                        <input type=\"date\" name=\"eventType\" id=\"eventDate\" onChange={this.handleOnChange}></input>\n\n                        <label htmlFor=\"eventLocation\"> \n                            Event Location\n                        </label>\n                        <input name=\"eventLocation\" id=\"eventLocation\" onChange={this.handleOnChange}></input>\n                    </div>\n                    <div className=\"inputCont\">\n                        <label htmlFor=\"uploadBtn\">Upload student info(only .xlsx files allowed) </label>\n                        <input type=\"file\" id=\"uploadBtn\" name=\"studentFile\" onChange={this.handleOnChange} accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" />\n                    </div>\n                    <input type=\"submit\" className=\"submit-event\" value=\"Submit Event Info\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EventsFormComponet);","import axios from \"axios\";\n\n\nconst EventsService =  {\n\n    postEventService(data) {\n        return new Promise(function(resolve, reject) {\n            console.log(data);\n            try{\n                axios.post(\"http://localhost:8000/events\", data).then(res => {\n                    if(res.data.code === 201){\n                        resolve(res);\n                    } else{\n                        reject(\"Event not created\");\n                    }\n                })\n                .catch( (err) => {\n                });\n            } catch(e){\n                console.log(e);\n            }\n        });\n    },\n    getEventService(){\n        return new Promise(function(resolve, reject) {\n            try{\n                axios.get(\"http://localhost:8000/events\").then(res => {\n                    if(res){\n                        resolve(res);\n                    } else{\n                        reject(\"Event not created\");\n                    }\n                })\n                .catch( (err) => {\n                });\n            } catch(e){\n                console.log(e);\n            }\n        });\n    },\n    downloadEventService(eventName){\n        return new Promise(function(resolve, reject) {\n            try{\n                axios.get(`http://localhost:8000/events/${eventName}/download`).then(res => {\n                    if(res){\n                        resolve(res);\n                    } else{\n                        reject(\"Event not created\");\n                    }\n                })\n                .catch( (err) => {\n                });\n            } catch(e){\n                console.log(e);\n            }\n        });\n    }\n}\n\nexport default EventsService;","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./EventsComponent.css\";\nimport \"../../Loading.css\";\nimport EventsForm from \"../EventsFormComponent/EventsFormComponent\";\nimport EventsService from '../../services/eventsService';\n\nclass Events extends Component {\n  \n  constructor(props) {\n    super(props);\n    if(this.props.location.state){\n      this.state = { eventName: this.props.location.state.eventName, eventDesc: this.props.location.state.eventDesc, showForm: false, events: []};\n    } else{\n      this.state = { eventName: \"\", eventDesc: \"\", showForm: false, events: []};\n    }\n    this.openEventUploadModal = this.openEventUploadModal.bind(this);\n  }\n\n  componentDidMount() {\n    EventsService.getEventService().then((res) => {\n      console.log(res.data.events);\n      this.setState({\n        events: res.data.events\n      });\n    })\n  }\n\n  openEventUploadModal(){\n    this.setState({showForm : true});\n  }\n\n  closeModal = (showFormState) => {\n    this.setState({showForm: showFormState});\n  }\n\n  createEventCards = () => {\n    if(this.state.events.length > 0){\n      var eventsToShow = this.state.events;\n      return eventsToShow.map((event, index)=> {\n        if(event.eventName === this.state.eventName) {\n          return <div className=\"event-create-card\" key={index}>\n                  <button className=\"event-btn\" onClick= { this.openEventUploadModal }>\n                    <h1 className=\"event-name\"> New Event: { this.state.eventName } </h1> \n                    <p className=\"new-event-desc\"> { this.state.eventDesc } </p>\n                  </button>\n                </div>;\n        } else{\n          return <div className=\"event-card\" key={index}>\n                    <button className=\"event-btn\">\n                      <h1 className=\"event-name\"> { event.eventName.toUpperCase() } </h1> \n                      <p className=\"event-desc\"> {event.description } </p>\n                      <p className=\"event-name\"> UPLOADED </p>\n                    </button>\n                  </div>;\n        }\n      });\n    }\n  }\n\n  showSpinner(msg){\n    if(this.state.events.length === 0){\n      return <div className=\"spinner\"> <h1> {msg} </h1> <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>;\n    } else{\n      return \"\";\n    }\n  }\n\n  render() {\n    return <div>\n            { this.state.showForm ? <EventsForm  eventName={this.state.eventName} closeModal={this.closeModal}/> : \"\"}\n            {this.createEventCards()}\n            <div className=\"spinner\">\n              {this.showSpinner(\"Loading Your Events \") }\n            </div>\n          </div>\n  }\n}\n\nexport default withRouter(Events);","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./HomeComponent.css\";\nimport EventService from \"../../services/eventsService\";\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: '', desc: '', toEvent: false, loading: false, error: \"\", selectValue: \"Academics\"};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeDesc = this.handleChangeDesc.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSelectChange(event){\n    this.setState({selectValue: event.target.value});\n  }\n  \n  handleChangeDesc(event) {\n    this.setState({desc: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); \n    \n    if(this.state.value !== \"\"){\n      var dataObj = {\n        \"eventName\": this.state.value,\n        \"description\": this.state.desc\n      }\n      this.setState({\n        error: \"\",\n        loading: true\n      });\n      EventService.postEventService([dataObj]).then( (result) => {\n        this.setState({\n          loading: false\n        }); \n        this.props.history.push({\n          pathname: '/events',\n          state: { eventName: this.state.value, eventDesc: this.state.desc, eventType: this.state.selectValue}\n        });\n      })\n    } else{\n      this.setState({\n        error: \"***Event Name is required field.***\"\n      });\n    }\n  }\n\n  showSpinner(msg){\n    return <div className=\"spinner\"> <h1> {msg} </h1> <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>;\n  }\n\n  render() {\n    return (\n      <div>\n          {this.state.loading ? this.showSpinner(\"Saving your event\"): \"\"}\n          <div className={ `home-cont ${this.state.loading ? \"hide-element\" : \"\"}` }>\n            { this.state.error ?  <p className=\"error\">\n                {this.state.error}\n            </p> : \"\" } \n            <h1>\n                Create Event\n            </h1>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"inputCont\">\n                  <label>\n                    Enter Event name:\n                  </label>\n                  <input type=\"text\" className={(this.state.error !== \"\") ? \"error-input\":\"\"} value={this.state.value} placeholder=\"Event name\" onChange={this.handleChange} />\n              </div>\n              <div className=\"inputCont\">\n                <label>\n                  Enter Event Desc:\n                </label>\n                <input type=\"text\" value={this.state.desc} placeholder=\"Event description\" onChange={this.handleChangeDesc} />\n              </div>\n{/*               <div className=\"inputCont\">\n                <label>\n                  Enter Type:\n                </label>\n                <select value={this.state.selectValue} onChange={this.handleSelectChange}>\n                  <option value=\"academics\">Academics</option>\n                  <option value=\"sports\">Sports</option>\n                  <option value=\"cultural\">Cultural</option>\n                </select>\n              </div> */}\n              <input type=\"submit\" value=\"Submit\" className=\"submit-event\"/>\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);","import axios from \"axios\";\n\nfunction CheckInService(pantherId, eventName, status){\n        return new Promise(function(resolve, reject) {\n            try{\n                axios.patch(`http://localhost:8000/events/${eventName}/${pantherId}/?checkin=${status}`).then(res => {\n                    if(res){\n                        resolve(res);\n                    } else{\n                        reject(\"Upload service failed\");\n                    }\n                })\n                .catch( (err) => {\n                    reject(err.message);\n                });\n            } catch(e){\n                console.log(e);\n            }\n    });\n}\n\nexport default CheckInService;","import React, {Component} from \"react\";\nimport \"./SearchCheckInComponent.css\";\nimport { withRouter } from 'react-router-dom';\nimport CheckInService from \"../../services/checkInService\";\n// import studentData from \"../../Mock/MockData\";\n\nclass EventsFormComponet extends Component{\n\n    constructor(props){\n        super(props);\n        if(this.props.location.state){\n            this.state = { studentData: this.props.location.state.studentData, filteredData: [], searchValue: \"\", filters: [] };\n        } else{\n            this.state = {studentData: []};\n        }\n        this.toggleFilterSelection = this.toggleFilterSelection.bind(this);\n        this.initiateSearch = this.initiateSearch.bind(this);\n        this.navigateCheckIn = this.navigateCheckIn.bind(this);\n    }\n\n    getKeys = function(){\n        return Object.keys(this.state.studentData[0]);\n    }\n\n    navigateCheckIn(){\n        this.props.history.push({\n            pathname: '/download',\n            state: { eventName: this.props.location.state.eventName }\n        });\n    }\n\n    getHeader = function(){\n        var keys = this.getKeys();\n        return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    renderRows = (rowData,keys) => {\n        return keys.map((key, index)=>{\n            if(key === \"checked_in\"){\n                return <td key={rowData[key]} className=\"toggle-cell\"> <label className=\"toggle-switch\"> <input checked={rowData[\"checked_in\"]} type=\"checkbox\" onChange={(event) => this.toggleStatus(event, rowData[\"panther_id\"])}/> <span className=\"slider round\"></span> </label> </td>;\n            }else{\n                return <td key={rowData[key]}>{rowData[key]}</td>;\n            }\n        })\n    }\n\n    getEventRowData = function(){\n        var items =  this.state.filteredData.length === 0 ? this.state.studentData: this.state.filteredData;\n        var keys = this.getKeys();\n        return items.map((row, index)=> {\n            return <tr key={index}>{this.renderRows(row,keys)}</tr>\n        });\n    }\n\n    toggleFilterSelection(event){\n        if(this.state.filters.indexOf(event.target.value) === -1){\n            var newFilterArray = [];\n            newFilterArray.push(event.target.value);\n            this.setState({\n                filters: newFilterArray\n            }, () => {\n                this.initiateSearch();\n            });\n        } else{\n            var emptyFilterArray = [];\n            this.setState({\n                filters: emptyFilterArray\n            })\n        }\n    }\n\n    toggleStatus(event, pantherId){\n        var clickedResult;\n        if(this.state.filteredData.length !== 0){\n            clickedResult = this.state.filteredData.filter((student) => student[\"panther_id\"] === pantherId);\n            clickedResult[0].checked_in = event.target.checked;\n            var index = this.state.filteredData.findIndex( student => student.panther_id === pantherId);\n            var filterCopy = [...this.state.filteredData];\n            filterCopy[index] = clickedResult[0];\n            this.setState({\n                filteredData: filterCopy\n            })\n            this.updateCheckInStatus(clickedResult[0]);\n        } else{\n            clickedResult = this.state.studentData.filter((student) => student[\"panther_id\"] === pantherId);\n            clickedResult[0].checked_in = event.target.checked;\n            this.updateCheckInStatus(clickedResult[0]);\n        }\n    }\n\n    updateCheckInStatus(studentObj){\n        var index = this.state.studentData.findIndex(student => student.panther_id === studentObj.panther_id);\n        var studentCopy = [...this.state.studentData];\n        studentCopy[index] = studentObj;\n        this.setState({\n            studentData: studentCopy\n        })\n        CheckInService( studentObj.panther_id,this.props.location.state.eventName,studentObj.checked_in);\n    }\n\n    initiateSearch(event){\n        let searchVal\n        if(event){\n            searchVal = event.target.value;\n            this.setState({\"searchValue\": event.target.value});\n        } else{\n            searchVal = this.state.searchValue;\n        }\n        if(searchVal.length >= 3 && this.state.filters.length > 0){\n            var filteredResults = [];\n            filteredResults = this.state.studentData.filter((student) => student[this.state.filters[0]].toLowerCase().indexOf(searchVal.toLowerCase()) !== -1);\n            console.log(filteredResults);\n            this.setState({\n                filteredData: filteredResults\n            });\n        } else{\n            if(this.state.filteredData.length !== 0){\n                this.setState({\n                    filteredData: []\n                });\n            }\n        }\n    }\n\n    checkFilterSelection(filterName){\n        return this.state.filters.indexOf(filterName) === -1;\n    }\n\n    render(){\n        return (\n            <div className = \"search-check-in-cont\">\n                { this.state.studentData.length === 0 ? <h1> No events to check in</h1> : <div> <h1> Search and Check In </h1>\n                    <div className=\"search-input-box\">\n                        <label>\n                            Enter search keyword(3 characters minimum)  \n                        </label>\n                        <input placeholder=\"Enter Search Text\" \n                            className=\"search-input\" \n                            onChange={this.initiateSearch} \n                        />\n                        <button value=\"first_name\" className={ this.checkFilterSelection(\"first_name\") ? \"\": \"selected-filter\" } \n                            onClick={this.toggleFilterSelection}> \n                            First Name  \n                        </button>\n                        <button value=\"last_name\" className={ this.checkFilterSelection(\"last_name\") ? \"\": \"selected-filter\" } \n                            onClick={this.toggleFilterSelection}> \n                            Last Name  \n                        </button>\n                        <button value=\"panther_id\" className={ this.checkFilterSelection(\"panther_id\") ? \"\": \"selected-filter\" } \n                            onClick={this.toggleFilterSelection}> \n                            Panther Id  \n                        </button>\n                    </div>\n                    <table>\n                        <thead>\n                        <tr>\n                            {this.getHeader()}\n                        </tr>\n                        </thead>\n                    <tbody> \n                        {this.getEventRowData()}\n                    </tbody>\n                    </table>\n                    <button className=\"check-in\" onClick={this.navigateCheckIn}> Completed Check In </button> \n                </div>\n            }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EventsFormComponet);","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport \"../SearchCheckInComponent/SearchCheckInComponent.css\";\n\nclass Download extends Component {\n\n  constructor(props){\n    super(props);\n    this.downloadExcel = this.downloadExcel.bind(this);\n    this.downloadExcelCheckedIn = this.downloadExcelCheckedIn.bind(this);\n    this.downloadExcelNotCheckedIn = this.downloadExcelNotCheckedIn.bind(this);\n  }\n\n  downloadExcel(){\n    window.location.href = `http://localhost:8000/events/${this.props.location.state.eventName}/download`;\n  }\n\n  downloadExcelCheckedIn(){\n    window.location.href = `http://localhost:8000/events/${this.props.location.state.eventName}/download?checkedIn=true`;\n  }\n\n  downloadExcelNotCheckedIn(){\n    window.location.href = `http://localhost:8000/events/${this.props.location.state.eventName}/download?checkedIn=false`;\n  }\n\n  render() {\n    return (\n        <div className=\"home-cont\">\n          <h1>\n              Download the csv and .xlsx files here\n          </h1>\n          <button className=\"check-in\" onClick={this.downloadExcel}>\n              Download with all status\n          </button>\n          <button className=\"check-in\" onClick={this.downloadExcelCheckedIn}>\n              Download with checked-in status\n          </button>\n          <button className=\"check-in\" onClick={this.downloadExcelNotCheckedIn}>\n              Download with non checked-in status\n          </button>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(Download);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport HeaderComponent from \"./components/HeaderComponent/HeaderComponent\";\nimport FooterComponent from \"./components/FooterComponent/FooterComponent\";\nimport EventsComponent from \"./components/EventsComponent/EventsComponent\";\nimport Home from \"./components/HomeComponent/HomeComponent\";\nimport SearchCheckIn from \"./components/SearchCheckInComponent/SearchCheckInComponent\";\nimport Download from \"./components/DownloadComponent/DownloadComponent\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {routeToEvents: false, eventName: \"\", eventDesc: \"\"};\n  }\n\n\n  passEventInfo(eventName, eventDesc){\n    if(eventName){\n      console.log(eventName);\n      this.setState({\n        routeToEvents: true,\n        eventName: eventName,\n        eventDesc: eventDesc\n      });\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n          <HeaderComponent />\n          <Route exact path=\"/events\"> \n              <EventsComponent />\n          </Route>\n          <Route exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route path=\"/event-check-in\">\n            <SearchCheckIn />\n          </Route>\n          <Route path=\"/download\">\n            <Download />\n          </Route>\n          <FooterComponent />\n      </Router>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}